{"version":3,"sources":["components/person/Person.js","components/peopleTable/PeopleTable.js","components/newPerson/NewPerson.js","App.js","index.js"],"names":["Person","_ref","person","onClickRow","selectPerson","id","name","sex","born","died","age","father","mother","children","century","Math","ceil","namesOfchildren","map","child","stylesForPersonName","classesForPerson","concat","push","length","textDecoration","fontWeight","react_default","a","createElement","className","join","onClick","style","defaultProps","PeopleTable","state","fieldOfSort","getFildOfSort","event","_this","setState","target","textContent","toLowerCase","props","onSort","handleClickRow","_this2","this","_this$state","_this$props","sortedPeople","people","field","funcSort","sortWay","arguments","undefined","b","localeCompare","Object","toConsumableArray","sort","sortPeople","sortStatus","currentPerson","person_Person","key","React","Component","possibleParents","mothers","fathers","errorMessage","maxYear","Date","getFullYear","NewPerson","showNewPersonForm","handleChange","_event$target","value","defineProperty","handleSubmit","preventDefault","onSubmitForm","_this$state2","rest","objectWithoutProperties","objectSpread","formClose","_this$state3","filter","woman","index","man","onSubmit","type","placeholder","onChange","required","htmlFor","checked","min","getChildren","currenPerson","getArrFromName","usersValue","split","startsWith","some","item","App","listOfPeople","filtredPeople","filterInput","filterByNameAndParents","byName","byMother","byFather","updateSortStatus","prevState","handleSubmitForm","fetch","then","response","json","peopleWhithChildren","currentIndex","newPerson_NewPerson","peopleTable_PeopleTable","ReactDOM","render","src_App","test","document","getElementById"],"mappings":"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","file":"static/js/main.dbe02d88.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './person.css';\n\nconst Person = ({ person, onClickRow, selectPerson }) => {\n  const { id, name, sex, born, died, age, father, mother, children } = person;\n  const century = Math.ceil(died / 100);\n  const namesOfchildren = children.map(child => child.name);\n  const stylesForPersonName = {};\n  const classesForPerson = ['person', `person--lived-in-${century}`];\n\n  if (sex === 'f') {\n    classesForPerson.push('person--female');\n    if (namesOfchildren.length !== 0) {\n      classesForPerson.push(' person--mother');\n    }\n  }\n\n  if (sex === 'm') {\n    classesForPerson.push('person--male');\n    if (namesOfchildren.length !== 0) {\n      classesForPerson.push(' person--father');\n    }\n  }\n\n  if (age > 65) {\n    classesForPerson.push('person--lived-more-65y');\n  }\n\n  if (id === selectPerson) {\n    classesForPerson.push('person--select');\n  }\n\n  if (born < 1650) {\n    stylesForPersonName.textDecoration = 'line-through';\n  }\n\n  if (died > 1800) {\n    stylesForPersonName.fontWeight = 'bold';\n  }\n\n  return (\n    <tr className={classesForPerson.join(' ')} onClick={() => onClickRow(id)}>\n      <td>{id + 1}</td>\n      <td style={stylesForPersonName}>{name}</td>\n      <td>{sex}</td>\n      <td>{born}</td>\n      <td>{died}</td>\n      <td>{age}</td>\n      <td>{mother}</td>\n      <td>{father}</td>\n      <td>{century}</td>\n      <td>{namesOfchildren.join(', ')}</td>\n    </tr>\n  );\n};\n\nPerson.propTypes = {\n  person: PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    name: PropTypes.string.isRequired,\n    sex: PropTypes.string,\n    born: PropTypes.number.isRequired,\n    died: PropTypes.number.isRequired,\n    age: PropTypes.number.isRequired,\n    father: PropTypes.string,\n    mother: PropTypes.string,\n    children: PropTypes.arrayOf(PropTypes.string),\n  }).isRequired,\n  onClickRow: PropTypes.func.isRequired,\n  selectPerson: PropTypes.number,\n};\n\nPerson.defaultProps = {\n  selectPerson: '',\n};\n\nexport default Person;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Person from '../person/Person';\nimport './peopleTable.css';\n\nconst sortPeople = (people, field, sortWay = 1) => {\n  if (people.length === 0) {\n    return [];\n  }\n\n  let funcSort;\n\n  switch (typeof people[0][field]) {\n    case 'number':\n    case 'boolean':\n      funcSort = (a, b) => sortWay * (a[field] - b[field]);\n      break;\n    case 'string':\n      funcSort = (a, b) => sortWay * a[field].localeCompare(b[field]);\n      break;\n    default: funcSort = (a, b) => 0;\n  }\n\n  return [...people].sort(funcSort);\n};\n\nclass PeopleTable extends React.Component {\n  state = {\n    selectPerson: '',\n    fieldOfSort: 'id',\n  }\n\n  getFildOfSort = (event) => {\n    this.setState({\n      fieldOfSort: event.target.textContent.toLowerCase(),\n    });\n\n    this.props.onSort();\n  };\n\n  handleClickRow = (id) => {\n    this.setState({\n      selectPerson: id,\n    });\n  }\n\n  render() {\n    const { selectPerson, fieldOfSort } = this.state;\n    const { people, sortStatus } = this.props;\n    const sortedPeople = sortPeople(people, fieldOfSort, sortStatus);\n\n    return (\n      <table className=\"peopleTable\">\n        <thead>\n          <tr>\n            <th onClick={this.getFildOfSort} className=\"cursorPointer\">Id</th>\n            <th onClick={this.getFildOfSort} className=\"cursorPointer\">Name</th>\n            <th>Sex</th>\n            <th onClick={this.getFildOfSort} className=\"cursorPointer\">Born</th>\n            <th onClick={this.getFildOfSort} className=\"cursorPointer\">Died</th>\n            <th onClick={this.getFildOfSort} className=\"cursorPointer\">Age</th>\n            <th>Mother</th>\n            <th>Father</th>\n            <th>Century</th>\n            <th>Children</th>\n          </tr>\n        </thead>\n        <tbody>\n          {\n            sortedPeople.map(currentPerson => (\n              <Person\n                person={currentPerson}\n                onClickRow={this.handleClickRow}\n                selectPerson={selectPerson}\n                key={`key${currentPerson.id + 10}`}\n              />\n            ))\n          }\n        </tbody>\n      </table>\n    );\n  }\n}\n\nPeopleTable.propTypes = {\n  people: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.number,\n    name: PropTypes.string,\n    born: PropTypes.number,\n    died: PropTypes.number,\n    age: PropTypes.number,\n  })).isRequired,\n  sortStatus: PropTypes.number.isRequired,\n  onSort: PropTypes.func.isRequired,\n};\n\nexport default PeopleTable;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './newPerson.css';\n\nlet possibleParents = [];\nlet mothers = [];\nlet fathers = [];\nlet errorMessage = '';\nconst maxYear = new Date().getFullYear();\n\nclass NewPerson extends React.Component {\n  state ={\n    name: '',\n    sex: '',\n    born: '',\n    died: '',\n    mother: '',\n    father: '',\n    showNewPersonForm: false,\n  };\n\n  handleChange = (event) => {\n    const { value, name } = event.target;\n    const { born, died } = this.state;\n\n    if ((name === 'died' || name === 'born') && value > maxYear) {\n      return;\n    }\n\n    if (name === 'died' && born !== '') {\n      if (value - born > 150 || value - born < 0) {\n        errorMessage = 'Age must be less than 150 and more than 0';\n      } else {\n        errorMessage = '';\n      }\n    }\n\n    if (name === 'born' && died !== '') {\n      if (died - value > 150 || died - value < 0) {\n        errorMessage = 'Age must be less than 150 and more than 0';\n      } else {\n        errorMessage = '';\n      }\n    }\n\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    const { people, onSubmitForm } = this.props;\n    const { born, died, showNewPersonForm, ...rest } = this.state;\n\n    if (died - born > 150 || died - born < 0) {\n      errorMessage = 'Age must be less than 150 and more than 0';\n      return;\n    }\n\n    const person = {\n      ...rest,\n      born: +born,\n      died: +died,\n      id: people.length,\n      age: died - born,\n      children: [],\n    };\n\n    this.setState({\n      name: '',\n      sex: '',\n      born: '',\n      died: '',\n      mother: '',\n      father: '',\n    });\n\n    onSubmitForm(person);\n  };\n\n  formClose = () => {\n    this.setState({\n      showNewPersonForm: false,\n    });\n  }\n\n  render() {\n    const {\n      name, sex, born, died, mother, father, showNewPersonForm,\n    } = this.state;\n\n    possibleParents = this.props.people.filter(person => (\n      +person.born + 13 <= +born && +person.died > +born\n    ));\n\n    mothers = possibleParents\n      .filter(person => person.sex === 'f')\n      .map((woman, index) => (\n        <option key={`f${index + 10}`}>\n          {woman.name}\n        </option>\n      ));\n\n    fathers = possibleParents\n      .filter(person => person.sex === 'm')\n      .map((man, index) => (\n        <option key={`m${index + 10}`}>\n          {man.name}\n        </option>\n      ));\n\n    return (\n      <div>\n        {\n          (showNewPersonForm)\n            ? (\n              <form\n                name=\"newPerson\"\n                className=\"new-person-form\"\n                onSubmit={this.handleSubmit}\n              >\n                <input\n                  type=\"text\"\n                  name=\"name\"\n                  value={name}\n                  placeholder=\"Name\"\n                  className=\"new-person-form__name\"\n                  onChange={this.handleChange}\n                  required\n                />\n\n                <div className=\"new-person-form__sex\">\n                  <label htmlFor=\"newPerson-male\">\n                    <input\n                      id=\"newPerson-male\"\n                      type=\"radio\"\n                      name=\"sex\"\n                      value=\"m\"\n                      checked={sex === 'm'}\n                      onChange={this.handleChange}\n                      required\n                    />\n                    male\n                  </label>\n\n                  <label htmlFor=\"newPerson-female\">\n                    <input\n                      id=\"newPerson-female\"\n                      type=\"radio\"\n                      name=\"sex\"\n                      value=\"f\"\n                      checked={sex === 'f'}\n                      onChange={this.handleChange}\n                    />\n                    female\n                  </label>\n                </div>\n\n                <label htmlFor=\"newPerson-born\">\n                  Born:\n                  <input\n                    id=\"newPerson-born\"\n                    type=\"number\"\n                    min=\"1500\"\n                    name=\"born\"\n                    value={born}\n                    placeholder=\"Year of born\"\n                    className=\"new-person-form__life-dates\"\n                    onChange={this.handleChange}\n                    required\n                  />\n                </label>\n\n                <label htmlFor=\"newPerson-died\">\n                  Died:\n                  <input\n                    id=\"newPerson-died\"\n                    type=\"number\"\n                    min=\"1500\"\n                    name=\"died\"\n                    value={died}\n                    placeholder=\"Year of died\"\n                    className=\"new-person-form__life-dates\"\n                    onChange={this.handleChange}\n                    required\n                  />\n                </label>\n\n                <span className=\"error-message\">{errorMessage}</span>\n\n                <label htmlFor=\"newPerson-mother\" className=\"new-person-form__parents\">\n                  <span>Mother:</span>\n                  <select\n                    id=\"newPerson-mother\"\n                    name=\"mother\"\n                    value={mother}\n                    onChange={this.handleChange}\n                  >\n                    <option> </option>\n                    {mothers}\n                  </select>\n                </label>\n\n                <label htmlFor=\"newPerson-father\" className=\"new-person-form__parents\">\n                  <span>Father:</span>\n                  <select\n                    id=\"newPerson-father\"\n                    name=\"father\"\n                    value={father}\n                    onChange={this.handleChange}\n                  >\n                    <option> </option>\n                    {fathers}\n                  </select>\n                </label>\n\n                <button\n                  type=\"submit\"\n                  className=\"new-person-form__button\"\n                >\n                  Add new person\n                </button>\n\n                <button\n                  type=\"button\"\n                  onClick={this.formClose}\n                  className=\"new-person-form__button\"\n                >\n                  Close\n                </button>\n              </form>\n            )\n            : (\n              <button\n                type=\"button\"\n                className=\"app__add-new-person\"\n                onClick={() => this.setState({ showNewPersonForm: true })}\n              >\n                Add new person\n              </button>\n            )\n        }\n      </div>\n    );\n  }\n}\n\nNewPerson.propTypes = {\n  people: PropTypes.arrayOf(PropTypes.object),\n  onSubmitForm: PropTypes.func.isRequired,\n};\n\nNewPerson.defaultProps = {\n  people: [],\n};\n\nexport default NewPerson;\n","import React from 'react';\nimport PeopleTable from './components/peopleTable/PeopleTable';\nimport NewPerson from './components/newPerson/NewPerson';\nimport './app.css';\n\nconst getChildren = (people, person) => (\n  people.filter(currenPerson => (\n    currenPerson.mother === person.name || currenPerson.father === person.name\n  )));\n\nconst getArrFromName = (name, usersValue) => {\n  if (name) {\n    if (usersValue.split(' ').length > 1) {\n      return name.toLowerCase().startsWith(usersValue.toLowerCase());\n    }\n\n    const arrFromName = name.toLowerCase().split(' ');\n    return arrFromName.some(item => item.startsWith(usersValue.toLowerCase()));\n  }\n\n  return false;\n};\n\nclass App extends React.Component {\n  state = {\n    listOfPeople: [],\n    filtredPeople: [],\n    filterInput: '',\n    sortStatus: 1,\n  }\n\n  componentDidMount() {\n    fetch('./api/people.json')\n      .then(response => response.json())\n      .then((people) => {\n        const peopleWhithChildren = people.map((currentPerson, currentIndex) => (\n          {\n            ...currentPerson,\n            id: currentIndex,\n            age: currentPerson.died - currentPerson.born,\n            children: getChildren(people, currentPerson),\n          }\n        ));\n\n        this.setState({\n          listOfPeople: peopleWhithChildren,\n          filtredPeople: peopleWhithChildren,\n        });\n      });\n  }\n\n  filterByNameAndParents = (event) => {\n    const { value, name } = event.target;\n    const people = [...this.state.listOfPeople];\n\n    this.setState({\n      [name]: value,\n    });\n\n    if (value !== '') {\n      this.setState({\n        filtredPeople: people.filter((currentPerson) => {\n          const byName = getArrFromName(currentPerson.name, value);\n          const byMother = getArrFromName(currentPerson.mother, value);\n          const byFather = getArrFromName(currentPerson.father, value);\n\n          return byName || byMother || byFather;\n        }),\n      });\n    } else {\n      this.setState({\n        filtredPeople: [...people],\n      });\n    }\n  }\n\n  updateSortStatus = () => {\n    this.setState(prevState => (\n      {\n        sortStatus: -prevState.sortStatus,\n      }\n    ));\n  }\n\n  handleSubmitForm = (person) => {\n    this.setState(prevState => (\n      {\n        listOfPeople: [...prevState.listOfPeople, person],\n        filtredPeople: [...prevState.listOfPeople, person],\n        filterInput: '',\n      }\n    ));\n  }\n\n  render() {\n    const { filtredPeople, sortStatus, listOfPeople, filterInput } = this.state;\n\n    return (\n      <div className=\"app\">\n        <h1>\n          People table\n          {filtredPeople.length}\n        </h1>\n\n        <input\n          type=\"text\"\n          className=\"app__filter\"\n          placeholder=\"Enter the name for search\"\n          name=\"filterInput\"\n          value={filterInput}\n          onChange={this.filterByNameAndParents}\n        />\n\n        <NewPerson\n          people={listOfPeople}\n          onSubmitForm={this.handleSubmitForm}\n        />\n\n        <PeopleTable\n          people={filtredPeople}\n          sortStatus={sortStatus}\n          onSort={this.updateSortStatus}\n        />\n\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './App';\r\n\r\nReactDOM.render(<App test={123} />, document.getElementById('root'));\r\n"],"sourceRoot":""}