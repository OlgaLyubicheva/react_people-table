{"version":3,"sources":["components/person/Person.js","components/peopleTable/PeopleTable.js","components/newPerson/NewPerson.js","App.js","index.js"],"names":["Person","_ref","id","name","sex","born","died","age","father","mother","children","century","Math","ceil","namesOfchildren","map","kid","stylesForPersonName","classesForPerson","concat","push","length","textDecoration","fontWeight","react_default","a","createElement","className","join","style","defaultProps","sortedPeople","fieldOfSort","PeopleTable","people","sortStatus","updateAppState","field","funcSort","sortWay","arguments","undefined","b","localeCompare","Object","toConsumableArray","sort","sortPeople","getFildOfSort","event","target","textContent","toLowerCase","prevRow","onClick","currentRow","parentNode","hasAttribute","removeAttribute","classList","remove","setAttribute","add","currentPerson","person_Person","assign","key","possibleParents","mothers","fathers","errorMessage","maxYear","Date","getFullYear","NewPerson","state","handleChange","_event$target","value","_this$state","_this","setState","defineProperty","handleSubmit","preventDefault","props","_this$state2","rest","objectWithoutProperties","objectSpread","formClose","showNewPersonForm","_this$state3","this","filter","person","woman","index","man","onSubmit","type","placeholder","onChange","required","htmlFor","checked","min","React","Component","getChildren","currenPerson","getArrFromName","usersValue","split","startsWith","some","item","App","listOfPeople","filtredPeople","filterByNameAndParents","prevState","byName","byMother","byFather","config","_this2","fetch","then","response","json","peopleWhithChildren","currentIndex","_this3","onInput","newPerson_NewPerson","peopleTable_PeopleTable","ReactDOM","render","src_App","test","document","getElementById"],"mappings":"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","file":"static/js/main.bf881a59.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './person.css';\n\nconst Person = ({ id, name, sex, born, died, age, father, mother, children }) => {\n  const century = Math.ceil(died / 100);\n  const namesOfchildren = children.map(kid => kid.name);\n  const stylesForPersonName = {};\n  const classesForPerson = ['person', `person--lived-in-${century}`];\n\n  if (sex === 'f') {\n    classesForPerson.push('person--female');\n    if (namesOfchildren.length !== 0) {\n      classesForPerson.push(' person--mother');\n    }\n  }\n\n  if (sex === 'm') {\n    classesForPerson.push('person--male');\n    if (namesOfchildren.length !== 0) {\n      classesForPerson.push(' person--father');\n    }\n  }\n\n  if (age > 65) {\n    classesForPerson.push('person--lived-more-65y');\n  }\n\n  if (born < 1650) {\n    stylesForPersonName.textDecoration = 'line-through';\n  }\n\n  if (died > 1800) {\n    stylesForPersonName.fontWeight = 'bold';\n  }\n\n  return (\n    <tr className={classesForPerson.join(' ')}>\n      <td>{id + 1}</td>\n      <td style={stylesForPersonName}>{name}</td>\n      <td>{sex}</td>\n      <td>{born}</td>\n      <td>{died}</td>\n      <td>{age}</td>\n      <td>{mother}</td>\n      <td>{father}</td>\n      <td>{century}</td>\n      <td>{namesOfchildren.join(', ')}</td>\n    </tr>\n  );\n};\n\nPerson.propTypes = {\n  id: PropTypes.number.isRequired,\n  name: PropTypes.string.isRequired,\n  sex: PropTypes.string,\n  born: PropTypes.number.isRequired,\n  died: PropTypes.number.isRequired,\n  age: PropTypes.number.isRequired,\n  father: PropTypes.string,\n  mother: PropTypes.string,\n  children: PropTypes.arrayOf(PropTypes.string),\n};\n\nPerson.defaultProps = {\n  sex: '',\n  father: '',\n  mother: '',\n  children: [],\n};\n\nexport default Person;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Person from '../person/Person';\nimport './peopleTable.css';\n\nlet sortedPeople = [];\nlet fieldOfSort = 'id';\n\nconst sortPeople = (people, field, sortWay = 1) => {\n  if (people.length === 0) {\n    return [];\n  }\n\n  let funcSort;\n\n  switch (typeof people[0][field]) {\n    case 'number':\n    case 'boolean':\n      funcSort = (a, b) => sortWay * (a[field] - b[field]);\n      break;\n    case 'string':\n      funcSort = (a, b) => sortWay * a[field].localeCompare(b[field]);\n      break;\n    default: funcSort = (a, b) => 0;\n  }\n\n  return [...people].sort(funcSort);\n};\n\nconst PeopleTable = ({ people, sortStatus, updateAppState }) => {\n  sortedPeople = sortPeople(people, fieldOfSort, sortStatus);\n\n  const getFildOfSort = (event) => {\n    fieldOfSort = event.target.textContent.toLowerCase();\n    updateAppState({ sortStatus: -sortStatus });\n  };\n\n  let prevRow = '';\n  const selectRow = (event) => {\n    const currentRow = event.target.parentNode;\n    const rowClick = currentRow.hasAttribute('clickedRow');\n\n    if (!rowClick) {\n      currentRow.setAttribute('clickedRow', true);\n      currentRow.classList.add('person--select');\n\n      if (prevRow !== '') {\n        prevRow.removeAttribute('clickedRow');\n        prevRow.classList.remove('person--select');\n        prevRow = currentRow;\n      } else {\n        prevRow = currentRow;\n      }\n    } else {\n      currentRow.removeAttribute('clickedRow');\n      currentRow.classList.remove('person--select');\n    }\n  };\n\n  return (\n    <table className=\"peopleTable\">\n      <thead>\n        <tr>\n          <th onClick={getFildOfSort} className=\"cursorPointer\">Id</th>\n          <th onClick={getFildOfSort} className=\"cursorPointer\">Name</th>\n          <th>Sex</th>\n          <th onClick={getFildOfSort} className=\"cursorPointer\">Born</th>\n          <th onClick={getFildOfSort} className=\"cursorPointer\">Died</th>\n          <th onClick={getFildOfSort} className=\"cursorPointer\">Age</th>\n          <th>Mother</th>\n          <th>Father</th>\n          <th>Century</th>\n          <th>Children</th>\n        </tr>\n      </thead>\n      <tbody onClick={selectRow}>\n        {\n          sortedPeople.map(currentPerson => (\n            <Person\n              {...currentPerson}\n              key={`key${currentPerson.id + 10}`}\n            />\n          ))\n        }\n      </tbody>\n    </table>\n  );\n};\n\nPeopleTable.propTypes = {\n  people: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.number,\n    name: PropTypes.string,\n    born: PropTypes.number,\n    died: PropTypes.number,\n    age: PropTypes.number,\n  })).isRequired,\n  sortStatus: PropTypes.number.isRequired,\n  updateAppState: PropTypes.func.isRequired,\n};\n\nexport default PeopleTable;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './newPerson.css';\n\nlet possibleParents = [];\nlet mothers = [];\nlet fathers = [];\nlet errorMessage = '';\nconst maxYear = new Date().getFullYear();\n\nclass NewPerson extends React.Component {\n  state ={\n    name: '',\n    sex: '',\n    born: '',\n    died: '',\n    mother: '',\n    father: '',\n  };\n\n  handleChange = (event) => {\n    const { value, name } = event.target;\n    const { born, died } = this.state;\n\n    if ((name === 'died' || name === 'born') && value > maxYear) {\n      return;\n    }\n\n    if (name === 'died' && born !== '') {\n      if (value - born > 150 || value - born < 0) {\n        errorMessage = 'Age must be less than 150 and more than 0';\n      } else {\n        errorMessage = '';\n      }\n    }\n\n    if (name === 'born' && died !== '') {\n      if (died - value > 150 || died - value < 0) {\n        errorMessage = 'Age must be less than 150 and more than 0';\n      } else {\n        errorMessage = '';\n      }\n    }\n\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n\n    const { people } = this.props;\n    const { born, died, ...rest } = this.state;\n\n    if (died - born > 150 || died - born < 0) {\n      errorMessage = 'Age must be less than 150 and more than 0';\n      return false;\n    }\n\n    people.push({\n      ...rest,\n      born: +born,\n      died: +died,\n      id: people.length,\n      age: died - born,\n      children: [],\n    });\n\n    this.setState({\n      name: '',\n      sex: '',\n      born: '',\n      died: '',\n      mother: '',\n      father: '',\n    });\n\n    return true;\n  };\n\n  formClose = () => {\n    this.props.updateAppState({ showNewPersonForm: false });\n  }\n\n  render() {\n    const { name, sex, born, died, mother, father } = this.state;\n\n    possibleParents = this.props.people.filter(person => (\n      +person.born + 13 <= +born && +person.died > +born\n    ));\n\n    mothers = possibleParents\n      .filter(person => person.sex === 'f')\n      .map((woman, index) => (\n        <option key={`f${index + 10}`}>\n          {woman.name}\n        </option>\n      ));\n\n    fathers = possibleParents\n      .filter(person => person.sex === 'm')\n      .map((man, index) => (\n        <option key={`m${index + 10}`}>\n          {man.name}\n        </option>\n      ));\n\n    return (\n      <form\n        name=\"newPerson\"\n        className=\"new-person-form\"\n        onSubmit={this.handleSubmit}\n      >\n        <input\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          placeholder=\"Name\"\n          className=\"new-person-form__name\"\n          onChange={this.handleChange}\n          required\n        />\n        <br />\n\n        <label htmlFor=\"newPerson-male\">\n          <input\n            id=\"newPerson-male\"\n            type=\"radio\"\n            name=\"sex\"\n            value=\"m\"\n            checked={sex === 'm'}\n            onChange={this.handleChange}\n            required\n          />\n          male\n        </label>\n\n        <label htmlFor=\"newPerson-female\">\n          <input\n            id=\"newPerson-female\"\n            type=\"radio\"\n            name=\"sex\"\n            value=\"f\"\n            checked={sex === 'f'}\n            onChange={this.handleChange}\n          />\n          female\n        </label>\n        <br />\n\n        <label htmlFor=\"newPerson-born\">\n          Born:\n          <input\n            id=\"newPerson-born\"\n            type=\"number\"\n            min=\"1500\"\n            name=\"born\"\n            value={born}\n            placeholder=\"Year of born\"\n            className=\"new-person-form__life-dates\"\n            onChange={this.handleChange}\n            required\n          />\n        </label>\n        <br />\n\n        <label htmlFor=\"newPerson-died\">\n          Died:\n          <input\n            id=\"newPerson-died\"\n            type=\"number\"\n            min=\"1500\"\n            name=\"died\"\n            value={died}\n            placeholder=\"Year of died\"\n            className=\"new-person-form__life-dates\"\n            onChange={this.handleChange}\n            required\n          />\n        </label>\n        <br />\n\n        <span className=\"error-message\">{errorMessage}</span>\n\n        <br />\n\n        <label htmlFor=\"newPerson-mother\" className=\"new-person-form__parents\">\n          <span>Mother:</span>\n          <select\n            id=\"newPerson-mother\"\n            name=\"mother\"\n            value={mother}\n            onChange={this.handleChange}\n          >\n            <option> </option>\n            {mothers}\n          </select>\n        </label>\n\n        <br />\n\n        <label htmlFor=\"newPerson-father\" className=\"new-person-form__parents\">\n          <span>Father:</span>\n          <select\n            id=\"newPerson-father\"\n            name=\"father\"\n            value={father}\n            onChange={this.handleChange}\n          >\n            <option> </option>\n            {fathers}\n          </select>\n        </label>\n\n        <br />\n\n        <button\n          type=\"submit\"\n          className=\"new-person-form__button\"\n        >\n          Add new person\n        </button>\n\n        <button\n          type=\"button\"\n          onClick={this.formClose}\n          className=\"new-person-form__button\"\n        >\n          Close\n        </button>\n\n      </form>\n    );\n  }\n}\n\nNewPerson.propTypes = {\n  people: PropTypes.arrayOf(PropTypes.object),\n  updateAppState: PropTypes.func.isRequired,\n};\n\nNewPerson.defaultProps = {\n  people: [],\n};\n\nexport default NewPerson;\n","import React from 'react';\nimport PeopleTable from './components/peopleTable/PeopleTable';\nimport NewPerson from './components/newPerson/NewPerson';\n\nconst getChildren = (people, person) => (\n  people.filter(currenPerson => (\n    currenPerson.mother === person.name || currenPerson.father === person.name\n  )));\n\nconst getArrFromName = (name, usersValue) => {\n  if (name) {\n    if (usersValue.split(' ').length > 1) {\n      return name.toLowerCase().startsWith(usersValue.toLowerCase());\n    }\n\n    const arrFromName = name.toLowerCase().split(' ');\n    return arrFromName.some(item => item.startsWith(usersValue.toLowerCase()));\n  }\n\n  return false;\n};\n\nclass App extends React.Component {\n  state = {\n    listOfPeople: [],\n    filtredPeople: [],\n    sortStatus: 1,\n    showNewPersonForm: false,\n  }\n\n  componentDidMount() {\n    fetch('./api/people.json')\n      .then(response => response.json())\n      .then((people) => {\n        const peopleWhithChildren = people.map((currentPerson, currentIndex) => (\n          {\n            ...currentPerson,\n            id: currentIndex,\n            age: currentPerson.died - currentPerson.born,\n            children: getChildren(people, currentPerson),\n          }\n        ));\n\n        this.setState({\n          listOfPeople: peopleWhithChildren,\n          filtredPeople: peopleWhithChildren,\n        });\n      });\n  }\n\n  filterByNameAndParents = (event) => {\n    const usersValue = event.target.value;\n\n    this.setState(prevState => ({\n      filtredPeople: prevState.listOfPeople.filter((currentPerson) => {\n        const byName = getArrFromName(currentPerson.name, usersValue);\n        const byMother = getArrFromName(currentPerson.mother, usersValue);\n        const byFather = getArrFromName(currentPerson.father, usersValue);\n\n        return byName || byMother || byFather;\n      }),\n    }));\n  }\n\n  updateAppState = (config) => {\n    this.setState(config);\n  }\n\n  render() {\n    const { filtredPeople, sortStatus, listOfPeople } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>\n          People table\n          {filtredPeople.length}\n        </h1>\n\n        <input\n          type=\"text\"\n          placeholder=\"Enter the name for search\"\n          onInput={this.filterByNameAndParents}\n        />\n        <br />\n        <br />\n\n        <button\n          type=\"button\"\n          onClick={() => this.setState({ showNewPersonForm: true })}\n        >\n          Add new person\n        </button>\n\n        {this.state.showNewPersonForm && <NewPerson updateAppState={this.updateAppState} people={listOfPeople} />}\n\n        <PeopleTable\n          people={filtredPeople}\n          sortStatus={sortStatus}\n          updateAppState={this.updateAppState}\n        />\n\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './App';\r\n\r\nReactDOM.render(<App test={123} />, document.getElementById('root'));\r\n"],"sourceRoot":""}