{"version":3,"sources":["components/loadingData.js","components/person/Person.js","components/peopleTable/PeopleTable.js","components/newPerson/NewPerson.js","App.js","index.js"],"names":["loadData","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","url","response","data","wrap","_context","prev","next","fetch","sent","json","abrupt","stop","_x","apply","this","arguments","getChildren","people","person","filter","currenPerson","mother","name","father","getPeopleWhithChildren","_ref2","_callee2","peopleWhithChildren","_context2","map","currentPerson","currentIndex","objectSpread","id","age","died","born","century","Math","ceil","children","child","Person","onClickRow","selectPerson","sex","stylesForPersonName","classesForPerson","concat","push","length","textDecoration","fontWeight","react_default","createElement","className","join","onClick","style","defaultProps","PeopleTable","state","fieldOfSort","getFieldOfSort","event","_this","setState","target","textContent","toLowerCase","props","onSort","handleClickRow","_this2","_this$state","_this$props","sortStatus","sortedPeople","toConsumableArray","sort","field","sortWay","undefined","b","localeCompare","getSortFunc","person_Person","key","React","Component","possibleParents","mothers","fathers","errorMessage","maxYear","Date","getFullYear","NewPerson","showNewPersonForm","handleChange","_event$target","value","defineProperty","handleSubmit","preventDefault","onSubmitForm","_this$state2","rest","objectWithoutProperties","formClose","_this$state3","woman","index","man","onSubmit","type","placeholder","onChange","required","htmlFor","checked","min","isNameStarts","usersValue","split","startsWith","some","item","App","listOfPeople","filtredPeople","filterInput","filterByNameAndParents","byName","byMother","byFather","updateSortStatus","prevState","handleSubmitForm","then","newPerson_NewPerson","peopleTable_PeopleTable","ReactDOM","render","src_App","test","document","getElementById"],"mappings":"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","file":"static/js/main.d496dccc.chunk.js","sourcesContent":["export const loadData = async(url) => {\n  const response = await fetch(url);\n  const data = await response.json();\n  return data;\n};\n\nexport const getChildren = (people, person) => (\n  people.filter(currenPerson => (\n    currenPerson.mother === person.name || currenPerson.father === person.name\n  )));\n\nexport const getPeopleWhithChildren = async() => {\n  const url = './api/people.json';\n\n  const people = await loadData(url);\n\n  const peopleWhithChildren = people.map((currentPerson, currentIndex) => (\n    {\n      ...currentPerson,\n      id: currentIndex,\n      age: currentPerson.died - currentPerson.born,\n      century: Math.ceil(currentPerson.died / 100),\n      children: getChildren(people, currentPerson).map(child => child.name),\n    }\n  ));\n\n  return peopleWhithChildren;\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './person.css';\n\nconst Person = ({ person, onClickRow, selectPerson }) => {\n  const {\n    id, name, sex, born, died, age, father, mother, children, century,\n  } = person;\n  const stylesForPersonName = {};\n  const classesForPerson = ['person', `person--lived-in-${century}`];\n\n  if (sex === 'f') {\n    classesForPerson.push('person--female');\n    if (children.length !== 0) {\n      classesForPerson.push(' person--mother');\n    }\n  }\n\n  if (sex === 'm') {\n    classesForPerson.push('person--male');\n    if (children.length !== 0) {\n      classesForPerson.push(' person--father');\n    }\n  }\n\n  if (age > 65) {\n    classesForPerson.push('person--lived-more-65y');\n  }\n\n  if (id === selectPerson) {\n    classesForPerson.push('person--select');\n  }\n\n  if (born < 1650) {\n    stylesForPersonName.textDecoration = 'line-through';\n  }\n\n  if (died > 1800) {\n    stylesForPersonName.fontWeight = 'bold';\n  }\n\n  return (\n    <tr className={classesForPerson.join(' ')} onClick={() => onClickRow(id)}>\n      <td>{id + 1}</td>\n      <td style={stylesForPersonName}>{name}</td>\n      <td>{sex}</td>\n      <td>{born}</td>\n      <td>{died}</td>\n      <td>{age}</td>\n      <td>{mother}</td>\n      <td>{father}</td>\n      <td>{century}</td>\n      <td>{children.join(', ')}</td>\n    </tr>\n  );\n};\n\nPerson.propTypes = {\n  person: PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    name: PropTypes.string.isRequired,\n    sex: PropTypes.string,\n    born: PropTypes.number.isRequired,\n    died: PropTypes.number.isRequired,\n    age: PropTypes.number.isRequired,\n    father: PropTypes.string,\n    mother: PropTypes.string,\n    century: PropTypes.number,\n    children: PropTypes.arrayOf(PropTypes.string),\n  }).isRequired,\n  onClickRow: PropTypes.func.isRequired,\n  selectPerson: PropTypes.number,\n};\n\nPerson.defaultProps = {\n  selectPerson: '',\n};\n\nexport default Person;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Person from '../person/Person';\nimport './peopleTable.css';\n\nconst getSortFunc = (people, field, sortWay = 1) => {\n  if (people.length === 0) {\n    return (a, b) => 0;\n  }\n\n  switch (typeof people[0][field]) {\n    case 'number':\n    case 'boolean':\n      return (a, b) => sortWay * (a[field] - b[field]);\n    case 'string':\n      return (a, b) => sortWay * a[field].localeCompare(b[field]);\n    default: return (a, b) => 0;\n  }\n};\n\nclass PeopleTable extends React.Component {\n  state = {\n    selectPerson: '',\n    fieldOfSort: 'id',\n  }\n\n  getFieldOfSort = (event) => {\n    this.setState({\n      fieldOfSort: event.target.textContent.toLowerCase(),\n    });\n\n    this.props.onSort();\n  };\n\n  handleClickRow = (id) => {\n    this.setState({\n      selectPerson: id,\n    });\n  }\n\n  render() {\n    const { selectPerson, fieldOfSort } = this.state;\n    const { people, sortStatus } = this.props;\n    const sortedPeople = [...people].sort(getSortFunc(people, fieldOfSort, sortStatus));\n\n    return (\n      <table className=\"peopleTable\">\n        <thead>\n          <tr>\n            <th onClick={this.getFieldOfSort} className=\"cursorPointer\">Id</th>\n            <th onClick={this.getFieldOfSort} className=\"cursorPointer\">Name</th>\n            <th>Sex</th>\n            <th onClick={this.getFieldOfSort} className=\"cursorPointer\">Born</th>\n            <th onClick={this.getFieldOfSort} className=\"cursorPointer\">Died</th>\n            <th onClick={this.getFieldOfSort} className=\"cursorPointer\">Age</th>\n            <th>Mother</th>\n            <th>Father</th>\n            <th>Century</th>\n            <th>Children</th>\n          </tr>\n        </thead>\n        <tbody>\n          {\n            sortedPeople.map(currentPerson => (\n              <Person\n                person={currentPerson}\n                onClickRow={this.handleClickRow}\n                selectPerson={selectPerson}\n                key={`key${currentPerson.id + 10}`}\n              />\n            ))\n          }\n        </tbody>\n      </table>\n    );\n  }\n}\n\nPeopleTable.propTypes = {\n  people: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.number,\n    name: PropTypes.string,\n    born: PropTypes.number,\n    died: PropTypes.number,\n    age: PropTypes.number,\n  })).isRequired,\n  sortStatus: PropTypes.number.isRequired,\n  onSort: PropTypes.func.isRequired,\n};\n\nexport default PeopleTable;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './newPerson.css';\n\nlet possibleParents = [];\nlet mothers = [];\nlet fathers = [];\nlet errorMessage = '';\nconst maxYear = new Date().getFullYear();\n\nclass NewPerson extends React.Component {\n  state ={\n    name: '',\n    sex: '',\n    born: '',\n    died: '',\n    mother: '',\n    father: '',\n    showNewPersonForm: false,\n  };\n\n  handleChange = (event) => {\n    const { value, name } = event.target;\n    const { born, died } = this.state;\n\n    if ((name === 'died' || name === 'born') && value > maxYear) {\n      return;\n    }\n\n    if (name === 'died' && born !== '') {\n      if (value - born > 150 || value - born < 0) {\n        errorMessage = 'Age must be less than 150 and more than 0';\n      } else {\n        errorMessage = '';\n      }\n    }\n\n    if (name === 'born' && died !== '') {\n      if (died - value > 150 || died - value < 0) {\n        errorMessage = 'Age must be less than 150 and more than 0';\n      } else {\n        errorMessage = '';\n      }\n    }\n\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  handleSubmit = (event) => {\n    event.preventDefault();\n    const { people, onSubmitForm } = this.props;\n    const { born, died, showNewPersonForm, ...rest } = this.state;\n\n    if (died - born > 150 || died - born < 0) {\n      errorMessage = 'Age must be less than 150 and more than 0';\n      return;\n    }\n\n    const person = {\n      ...rest,\n      born: +born,\n      died: +died,\n      id: people.length,\n      age: died - born,\n      century: Math.ceil(died / 100),\n      children: [],\n    };\n\n    this.setState({\n      name: '',\n      sex: '',\n      born: '',\n      died: '',\n      mother: '',\n      father: '',\n    });\n\n    onSubmitForm(person);\n  };\n\n  formClose = () => {\n    this.setState({\n      showNewPersonForm: false,\n    });\n  }\n\n  render() {\n    const {\n      name, sex, born, died, mother, father, showNewPersonForm,\n    } = this.state;\n\n    possibleParents = this.props.people.filter(person => (\n      +person.born + 13 <= +born && +person.died > +born\n    ));\n\n    mothers = possibleParents\n      .filter(person => person.sex === 'f')\n      .map((woman, index) => (\n        <option key={`f${index + 10}`}>\n          {woman.name}\n        </option>\n      ));\n\n    fathers = possibleParents\n      .filter(person => person.sex === 'm')\n      .map((man, index) => (\n        <option key={`m${index + 10}`}>\n          {man.name}\n        </option>\n      ));\n\n    return (\n      <div>\n        {\n          (showNewPersonForm)\n            ? (\n              <form\n                name=\"newPerson\"\n                className=\"new-person-form\"\n                onSubmit={this.handleSubmit}\n              >\n                <input\n                  type=\"text\"\n                  name=\"name\"\n                  value={name}\n                  placeholder=\"Name\"\n                  className=\"new-person-form__name\"\n                  onChange={this.handleChange}\n                  required\n                />\n\n                <div className=\"new-person-form__sex\">\n                  <label htmlFor=\"newPerson-male\">\n                    <input\n                      id=\"newPerson-male\"\n                      type=\"radio\"\n                      name=\"sex\"\n                      value=\"m\"\n                      checked={sex === 'm'}\n                      onChange={this.handleChange}\n                      required\n                    />\n                    male\n                  </label>\n\n                  <label htmlFor=\"newPerson-female\">\n                    <input\n                      id=\"newPerson-female\"\n                      type=\"radio\"\n                      name=\"sex\"\n                      value=\"f\"\n                      checked={sex === 'f'}\n                      onChange={this.handleChange}\n                    />\n                    female\n                  </label>\n                </div>\n\n                <label htmlFor=\"newPerson-born\">\n                  Born:\n                  <input\n                    id=\"newPerson-born\"\n                    type=\"number\"\n                    min=\"1500\"\n                    name=\"born\"\n                    value={born}\n                    placeholder=\"Year of born\"\n                    className=\"new-person-form__life-dates\"\n                    onChange={this.handleChange}\n                    required\n                  />\n                </label>\n\n                <label htmlFor=\"newPerson-died\">\n                  Died:\n                  <input\n                    id=\"newPerson-died\"\n                    type=\"number\"\n                    min=\"1500\"\n                    name=\"died\"\n                    value={died}\n                    placeholder=\"Year of died\"\n                    className=\"new-person-form__life-dates\"\n                    onChange={this.handleChange}\n                    required\n                  />\n                </label>\n\n                <span className=\"error-message\">{errorMessage}</span>\n\n                <label htmlFor=\"newPerson-mother\" className=\"new-person-form__parents\">\n                  <span>Mother:</span>\n                  <select\n                    id=\"newPerson-mother\"\n                    name=\"mother\"\n                    value={mother}\n                    onChange={this.handleChange}\n                  >\n                    <option> </option>\n                    {mothers}\n                  </select>\n                </label>\n\n                <label htmlFor=\"newPerson-father\" className=\"new-person-form__parents\">\n                  <span>Father:</span>\n                  <select\n                    id=\"newPerson-father\"\n                    name=\"father\"\n                    value={father}\n                    onChange={this.handleChange}\n                  >\n                    <option> </option>\n                    {fathers}\n                  </select>\n                </label>\n\n                <button\n                  type=\"submit\"\n                  className=\"new-person-form__button\"\n                >\n                  Add new person\n                </button>\n\n                <button\n                  type=\"button\"\n                  onClick={this.formClose}\n                  className=\"new-person-form__button\"\n                >\n                  Close\n                </button>\n              </form>\n            )\n            : (\n              <button\n                type=\"button\"\n                className=\"app__add-new-person\"\n                onClick={() => this.setState({ showNewPersonForm: true })}\n              >\n                Add new person\n              </button>\n            )\n        }\n      </div>\n    );\n  }\n}\n\nNewPerson.propTypes = {\n  people: PropTypes.arrayOf(PropTypes.object),\n  onSubmitForm: PropTypes.func.isRequired,\n};\n\nNewPerson.defaultProps = {\n  people: [],\n};\n\nexport default NewPerson;\n","import React from 'react';\nimport { getPeopleWhithChildren } from './components/loadingData';\nimport PeopleTable from './components/peopleTable/PeopleTable';\nimport NewPerson from './components/newPerson/NewPerson';\nimport './app.css';\n\nconst isNameStarts = (name, usersValue) => {\n  if (name) {\n    if (usersValue.split(' ').length > 1) {\n      return name.toLowerCase().startsWith(usersValue.toLowerCase());\n    }\n\n    const arrFromName = name.toLowerCase().split(' ');\n    return arrFromName.some(item => item.startsWith(usersValue.toLowerCase()));\n  }\n\n  return false;\n};\n\nclass App extends React.Component {\n  state = {\n    listOfPeople: [],\n    filtredPeople: [],\n    filterInput: '',\n    sortStatus: 1,\n  }\n\n  componentDidMount() {\n    getPeopleWhithChildren().then((data) => {\n      this.setState({\n        listOfPeople: [...data],\n        filtredPeople: [...data],\n      });\n    });\n  }\n\n  filterByNameAndParents = (event) => {\n    const { value, name } = event.target;\n    const people = [...this.state.listOfPeople];\n\n    this.setState({\n      [name]: value,\n    });\n\n    if (value !== '') {\n      this.setState({\n        filtredPeople: people.filter((currentPerson) => {\n          const byName = isNameStarts(currentPerson.name, value);\n          const byMother = isNameStarts(currentPerson.mother, value);\n          const byFather = isNameStarts(currentPerson.father, value);\n\n          return byName || byMother || byFather;\n        }),\n      });\n    } else {\n      this.setState({\n        filtredPeople: [...people],\n      });\n    }\n  }\n\n  updateSortStatus = () => {\n    this.setState(prevState => (\n      {\n        sortStatus: -prevState.sortStatus,\n      }\n    ));\n  }\n\n  handleSubmitForm = (person) => {\n    this.setState(prevState => (\n      {\n        listOfPeople: [...prevState.listOfPeople, person],\n        filtredPeople: [...prevState.listOfPeople, person],\n        filterInput: '',\n      }\n    ));\n  }\n\n  render() {\n    const { filtredPeople, sortStatus, listOfPeople, filterInput } = this.state;\n\n    return (\n      <div className=\"app\">\n        <h1>\n          People table\n          {filtredPeople.length}\n        </h1>\n\n        <input\n          type=\"text\"\n          className=\"app__filter\"\n          placeholder=\"Enter the name for search\"\n          name=\"filterInput\"\n          value={filterInput}\n          onChange={this.filterByNameAndParents}\n        />\n\n        <NewPerson\n          people={listOfPeople}\n          onSubmitForm={this.handleSubmitForm}\n        />\n\n        <PeopleTable\n          people={filtredPeople}\n          sortStatus={sortStatus}\n          onSort={this.updateSortStatus}\n        />\n\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './App';\r\n\r\nReactDOM.render(<App test={123} />, document.getElementById('root'));\r\n"],"sourceRoot":""}