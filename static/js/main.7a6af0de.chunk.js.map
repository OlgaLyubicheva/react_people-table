{"version":3,"sources":["Person.js","PeopleTable.js","App.js","index.js"],"names":["Person","_ref","id","name","sex","born","died","age","father","mother","children","classMaleOrFemale","classForName","classGreenBorder","century","Math","ceil","namesOfchildren","map","kid","length","react_default","a","createElement","className","concat","join","defaultProps","sortPeople","fieldOfSort","PeopleTable","people","sortStatus","updateAppState","sortWay","funcSort","b","localeCompare","Object","toConsumableArray","sort","isSorted","getFildOfSort","event","target","textContent","toLowerCase","cursorPointer","cursor","onClick","style","currentPerson","src_Person","assign","key","getChildren","person","filter","currenPerson","getArrFromName","usersValue","split","startsWith","some","item","App","state","listOfPeople","filtredPeople","filterByNameAndParents","value","_this","setState","prevState","byName","byMother","byFather","config","_this2","this","fetch","then","response","json","peopleWhithChildren","currentIndex","objectSpread","_this$state","console","log","type","placeholder","onInput","src_PeopleTable","React","Component","ReactDOM","render","src_App","test","document","getElementById"],"mappings":"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","file":"static/js/main.7a6af0de.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './person.css';\n\nconst Person = ({ id, name, sex, born, died, age, father, mother, children }) => {\n  let classMaleOrFemale = '';\n  let classForName = '';\n  let classGreenBorder = '';\n  const century = Math.ceil(died / 100);\n  const namesOfchildren = children.map(kid => kid.name);\n\n  if (sex === 'f') {\n    classMaleOrFemale = 'person--female';\n    if (namesOfchildren.length !== 0) {\n      classMaleOrFemale += ' person--mother';\n    }\n  }\n\n  if (sex === 'm') {\n    classMaleOrFemale = 'person--male';\n    if (namesOfchildren.length !== 0) {\n      classMaleOrFemale += ' person--father';\n    }\n  }\n\n  if (born < 1650) {\n    classForName = 'person--born-before-1650';\n  }\n\n  if (died > 1800) {\n    classForName = 'person--died-after-1800';\n  }\n\n  if (age > 65) {\n    classGreenBorder = 'person--lived-more-65y';\n  }\n\n  return (\n    <tr className={`person ${classMaleOrFemale} ${classGreenBorder} person--lived-in-${century}`}>\n      <td>{id + 1}</td>\n      <td className={classForName}>{name}</td>\n      <td>{sex}</td>\n      <td>{born}</td>\n      <td>{died}</td>\n      <td>{age}</td>\n      <td>{mother}</td>\n      <td>{father}</td>\n      <td>{century}</td>\n      <td>{namesOfchildren.join(', ')}</td>\n    </tr>\n  );\n};\n\nPerson.propTypes = {\n  id: PropTypes.number.isRequired,\n  name: PropTypes.string.isRequired,\n  sex: PropTypes.string,\n  born: PropTypes.number.isRequired,\n  died: PropTypes.number.isRequired,\n  age: PropTypes.number.isRequired,\n  father: PropTypes.string,\n  mother: PropTypes.string,\n  children: PropTypes.arrayOf(PropTypes.string),\n};\n\nPerson.defaultProps = {\n  sex: '',\n  father: '',\n  mother: '',\n  children: [],\n};\n\nexport default Person;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Person from './Person';\nimport './peopleTable.css';\n\nlet sortPeople = [];\nlet fieldOfSort = 'id';\n\nconst isSorted = (people, sortWay, fieldOfSort) => {\n  if (people.length === 0) {\n    return [];\n  }\n\n  let funcSort;\n\n  switch (typeof people[0][fieldOfSort]) {\n    case 'number':\n      funcSort = (a, b) => sortWay * (a[fieldOfSort] - b[fieldOfSort]);\n      break;\n    case 'string':\n      funcSort = (a, b) => sortWay * a[fieldOfSort].localeCompare(b[fieldOfSort]);\n      break;\n    default: funcSort = 0;\n  }\n\n  return [...people].sort(funcSort);\n};\n\nconst PeopleTable = ({ people, sortStatus, updateAppState }) => {\n  sortPeople = isSorted(people, sortStatus, fieldOfSort);\n\n  const getFildOfSort = (event) => {\n    fieldOfSort = event.target.textContent.toLowerCase();\n    updateAppState({ sortStatus: -sortStatus });\n  };\n\n  const cursorPointer = { cursor: 'pointer' };\n\n  return (\n    <table className=\"peopleTable\">\n      <thead>\n        <tr>\n          <th onClick={getFildOfSort} style={cursorPointer}>Id</th>\n          <th onClick={getFildOfSort} style={cursorPointer}>Name</th>\n          <th>Sex</th>\n          <th onClick={getFildOfSort} style={cursorPointer}>Born</th>\n          <th onClick={getFildOfSort} style={cursorPointer}>Died</th>\n          <th onClick={getFildOfSort} style={cursorPointer}>Age</th>\n          <th>Mother</th>\n          <th>Father</th>\n          <th>Century</th>\n          <th>Children</th>\n        </tr>\n      </thead>\n      <tbody>\n        {\n          sortPeople.map(currentPerson => (\n            <Person\n              {...currentPerson}\n              key={`key${currentPerson.id + 10}`}\n            />\n          ))\n        }\n      </tbody>\n    </table>\n  );\n};\n\nPeopleTable.propTypes = {\n  people: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.number,\n    name: PropTypes.string,\n    born: PropTypes.number,\n    died: PropTypes.number,\n    age: PropTypes.number,\n  })).isRequired,\n  sortStatus: PropTypes.number.isRequired,\n  updateAppState: PropTypes.func.isRequired,\n};\n\nexport default PeopleTable;\n","import React from 'react';\nimport PeopleTable from './PeopleTable';\n\nconst getChildren = (people, person) => (\n  people.filter(currenPerson => (\n    currenPerson.mother === person.name || currenPerson.father === person.name\n  )));\n\nconst getArrFromName = (name, usersValue) => {\n  if (name) {\n    if (usersValue.split(' ').length > 1) {\n      return name.toLowerCase().startsWith(usersValue.toLowerCase());\n    }\n\n    const arrFromName = name.toLowerCase().split(' ');\n    return arrFromName.some(item => item.startsWith(usersValue.toLowerCase()));\n  }\n\n  return false;\n};\n\nclass App extends React.Component {\n  state = {\n    listOfPeople: [],\n    filtredPeople: [],\n    sortStatus: 1,\n  }\n\n  componentDidMount() {\n    fetch('./api/people.json')\n      .then(response => response.json())\n      .then((people) => {\n        const peopleWhithChildren = people.map((currentPerson, currentIndex) => (\n          {\n            ...currentPerson,\n            id: currentIndex,\n            age: currentPerson.died - currentPerson.born,\n            children: getChildren(people, currentPerson),\n          }\n        ));\n\n        this.setState({\n          listOfPeople: peopleWhithChildren,\n          filtredPeople: peopleWhithChildren,\n        });\n      });\n  }\n\n  filterByNameAndParents = (event) => {\n    const usersValue = event.target.value;\n\n    this.setState(prevState => ({\n      filtredPeople: prevState.listOfPeople.filter((currentPerson) => {\n        const byName = getArrFromName(currentPerson.name, usersValue);\n        const byMother = getArrFromName(currentPerson.mother, usersValue);\n        const byFather = getArrFromName(currentPerson.father, usersValue);\n\n        return byName || byMother || byFather;\n      }),\n    }));\n  }\n\n  updateAppState = (config) => {\n    this.setState(config);\n  }\n\n  render() {\n    const { filtredPeople, sortStatus } = this.state;\n    console.log('render', ' filtredPeople:', filtredPeople);\n    return (\n      <div className=\"App\">\n        <h1>People table {filtredPeople.length} </h1>\n\n        <input\n          type=\"text\"\n          placeholder=\"filter name, mother and father\"\n          onInput={this.filterByNameAndParents}\n        />\n\n        <PeopleTable people={filtredPeople} sortStatus={sortStatus} updateAppState={this.updateAppState} />\n      </div>\n    );\n  }\n};\n\nexport default App;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './App';\r\n\r\nReactDOM.render(<App test={123} />, document.getElementById('root'));\r\n"],"sourceRoot":""}